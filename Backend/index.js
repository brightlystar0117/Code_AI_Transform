const express = require("express")
const app = express()
require('dotenv').config()
const cors = require("cors")
app.use(cors())
app.use(express.json())
const port = 8090

const { Configuration, OpenAIApi } = require("openai")

const config = new Configuration({
    apiKey: process.env.API_KEY
})
const openai = new OpenAIApi(config)


app.post("/convert", async (req, res) => {
    try {
        const { code, language } = req.body;

        const response = await openai.createChatCompletion({
            model: "gpt-3.5-turbo",
            messages: [{
                role: "system", content: `
              Act as a dynamic code compiler , detect the provided language of the following code.
              ${code}
              your task is to convert the code into ${language} and return the converted code.
              as follows 
                  {
                      code : {converted code},
                      extra : {extra information}
                  }
         ` },
            { role: "user", content: `${req.body}` }],
        })
        res.status(200).send(response.data.choices[0].message.content)

    } catch (error) {
        console.log(error);
        res.status(400).json({ msg: error.message });
    }
});


app.post("/debug", async (req, res) => {
    try {
        const { code, language } = req.body;

        const response = await openai.createChatCompletion({
            model: "gpt-3.5-turbo",
            messages: [{
                role: "system", content: `
                Act as a ${language} compiler , following is the code.
                ${code}
                Your task is to debug it and give the proper error with solution and if there is no error then do also give response that 
                as follows 
                {
                    "error" : error of the code
                }
         ` },
            { role: "user", content: `${req.body}` }],
        })
        res.status(200).send(response.data.choices[0].message.content)

    } catch (error) {
        console.log(error);
        res.status(400).json({ msg: error.message });
    }
})

app.post("/run", async (req, res) => {
    try {
        const { code } = req.body;

        const response = await openai.createChatCompletion({
            model: "gpt-3.5-turbo",
            messages: [{
                role: "system", content: `
              Act as a dynamic code compiler, detect the language of the following code.
              ${code}
              Your task is to take the input code, understand it, execute it, and provide only the output to the user
              as follows 
                  {
                      "output" : The output generated by executing the provided code.,
                  }
         ` },
            { role: "user", content: `${req.body}` }],
        })
        res.status(200).send(response.data.choices[0].message.content)

    } catch (error) {
        console.log(error);
        res.status(400).json({ msg: error.message });
    }
});




app.listen(port, () => {
    try {
        console.log(`Server is running on port ${port}`)
    } catch (error) {
        console.log(error.message)
    }
})

